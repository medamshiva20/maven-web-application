name: Azure Pipeline
variables:
- group: customer1_vars
trigger:
- main

pool: 
 name: DevOps_Agent

stages:
- stage: CI
  jobs:
  - job: usenodeversion
    steps: 
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '14.x'
    - task: CmdLine@2
      displayName: Packages Installation
      inputs:
        script: |
          sudo apt-get update
          sudo apt install nodejs -y
          sudo apt-get install npm -y
          sudo apt-get install yarn -y
          npm --version
          node --version
          yarn --version
          pwd
          ls
          rm -rf dist
          rm -rf node_modules
          ls
          export VERSION=$(VERSION)
          export CLIENT_NAME=$(CLIENT_NAME)
          export DEV_WEBAPIURL=$(DEV_WEBAPIURL)
          export ENV=$(ENV)
          export GOOGLE_API_KEY=$(GOOGLE_API_KEY)
          export GOOGLE_CAPTCHA_SECRET_KEY=$(GOOGLE_CAPTCHA_SECRET_KEY)
          export GOOGLE_CAPTCHA_SITE_KEY=$(GOOGLE_CAPTCHA_SITE_KEY)
          export GRANYTYPE=$(GRANYTYPE)
          export IS_USE_APIGATEWAY=$(IS_USE_APIGATEWAY)
          export MUI_LICENSE_KEY=$(MUI_LICENSE_KEY)
          export ONESIGNALAPPID=$(ONESIGNALAPPID)
          export REACT_APP_WEB_URL=$(REACT_APP_WEB_URL)
          export REFRESHGRANTTYPE=$(REFRESHGRANTTYPE)
          export WEBAPIURL=$(WEBAPIURL)
    - task: CmdLine@2
      displayName: Executing yarn
      inputs:
        script: | 
            yarn
            yarn run dev --env.CLIENT_NAME=sfx
            pwd
            ls
            echo "Removing existing dev package directory"
            rm -rf dev
            ls
            echo "creating new dev package directory"
            mkdir dev
            cp -r dist ./dev 
            cp package.json server.js powerBi.js ./dev
            cp -r node_modules ./dev
            cp -r jumpcloud ./dev
            echo "Listing contents of New Environment"
            ls ./dev
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'hlx_nodejs'
        publishLocation: 'Container'
   # - task: Bash@3
   #   inputs:
   #     targetType: 'inline'
   #     script: |
   #       # Write your commands here
   #       zip hlx_nodejs-artifact.zip hlx_nodejs